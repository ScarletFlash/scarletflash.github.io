import { CSpellIO } from 'cspell-io';
import { DictionaryDefinitionInternal } from '../Models/CSpellSettingsInternalDef';
import { DictionaryLoader } from './DictionaryController';
import { SpellingDictionary } from 'cspell-dictionary';
export type { LoadOptions } from './DictionaryController';
export declare function getDictionaryLoader(cspellIO?: CSpellIO): DictionaryLoader;
export declare function loadDictionary(def: DictionaryDefinitionInternal): Promise<SpellingDictionary>;
export declare function loadDictionarySync(def: DictionaryDefinitionInternal): SpellingDictionary;
/**
 * Check to see if any of the cached dictionaries have changed. If one has changed, reload it.
 * @param maxAge - Only check the dictionary if it has been at least `maxAge` ms since the last check.
 * @param now - optional timestamp representing now. (Mostly used in testing)
 */
export declare function refreshCacheEntries(maxAge?: number, now?: number): Promise<void>;
//# sourceMappingURL=DictionaryLoader.d.ts.map